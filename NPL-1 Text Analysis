from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split as tts
import pandas as pd
import warnings
warnings.filterwarnings("ignore")

df=pd.read_csv("/content/Consumer_Complaints.csv")
df.head()

df.columns

df["Consumer complaint narrative"][2]

print(df.Product.unique())

from sklearn.model_selection import train_test_split as tts
x_train,x_test,y_train,y_test=tts(df["Consumer complaint narrative"].values,df["Product"].values,test_size=0.20,random_state=0)
x_train,y_train

#Now we will calculate the tf-idf scores for each of the uniques tokens in the dataset.

from sklearn.feature_extraction.text import TfidfVectorizer
vectorize=TfidfVectorizer()
vectorize.fit(x_train)
x_train=vectorize.transform(x_train)
x_test=vectorize.transform(x_test)

from sklearn.feature_selection import SelectKBest,chi2
ch2=SelectKBest(chi2,k=5000)
x_train=ch2.fit_transform(x_train,y_train)
x_test=ch2.transform(x_test)
x_train,y_test

#Fit Naive Bayes Model now.

from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score
clf=MultinomialNB()
clf.fit(x_train,y_train)
pred=clf.predict(x_test)

print(accuracy_score(y_test,pred))
